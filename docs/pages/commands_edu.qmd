---
title: Educator Commands
---

The `franklin-educator` plugin extends Franklin with commands for creating and managing exercises.


## Prerequisites

- GitLab account with appropriate permissions
- SSH key configured for GitLab access
- Educator role in the Franklin GitLab group


## Roles

**Guest (role: guest)**:  
- Can view exercises
- Cannot edit exercise content or settings

**Teaching Assistant (role: ta)**:  
- Create create and edit exercises
- Can edit exercise settings
- Cannot delete exercises

**Professor / Course Responsible (role: prof)**:  
- Create create, edit and delete exercises
- Grant users the roles of Guest and Teaching Assistant.




## Exercises

**Create a new exercise**:

This command creates a new exercise repository with starter template.

```bash
franklin exercise new
```

<!-- ::: {.panel-tabset}

# This happens

1. You select the target course from a list
2. You enter a repository name (lowercase, no spaces)
3. You choose an exercise template
4. Franklin creates the GitLab repository
5. Template files are added automatically
6. The repository settings page opens in your browser

# Tips

- Use descriptive names like `week1-intro` or `lab3-analysis`
- The standard template includes everything needed to start
- Set repository visibility to "Public" in GitLab settings after creation
- Add a clear description for students

::: -->

<details>
<summary>Technical details of the process</summary>

1. **Permission Check**: Verifies educator role in target course
2. **Name Validation**: Ensures name follows GitLab conventions
3. **Repository Creation**: Uses GitLab API to create project
4. **Template Copy**: Copies template files from Franklin package
5. **Git Operations**: Initializes repo, adds files, makes initial commit
6. **Pipeline Trigger**: Starts CI/CD to build initial Docker image
7. **Settings Launch**: Opens browser to repository settings

</details>

**Edit an exercise**:

This command launches an exercise editing workflow with live testing.

```bash
franklin exercise edit
```

<!-- ::: {.panel-tabset}

# This happens

1. You select the exercise to edit
2. Franklin clones it to a temporary directory
3. Docker container starts with the exercise
4. JupyterLab opens in your browser
5. File changes are watched and auto-saved to Git
6. Tests run automatically on save
7. Changes are committed and pushed when done

# Tips

- Best for quick edits and beginners
- No Git knowledge required
- Dependencies are detected automatically
- Test feedback appears in terminal

::: -->

<details>
<summary>Technical details of the process</summary>

1. **Exercise Selection**: Choose exercise from course list
2. **Clone Repository**: Downloads to temporary directory
3. **Launch Environment**: Starts Docker with exercise
4. **Open JupyterLab**: Browser opens with files
5. **File Watching**: Auto-saves changes to Git
6. **Test on Save**: Runs tests automatically
7. **Commit & Push**: Pushes changes when done

</details>

**Open exercise settings page**:

This command opens the GitLab settings page for an exercise.

```bash
franklin exercise settings
```

