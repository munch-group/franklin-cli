---
title: Getting started
---

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">


::: {.panel-tabset group="role"}

## Student

{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}

## Educator

{{< video https://www.youtube.com/embed/wo9vZccmqwc >}}

:::

## Installing {#installing}

**Install Dependencies:**

Franklin depends on a few external tools that you need to install on your computer before you install Franklin:

1. If you have not installed **Python** already, you can follow the tutorial on how to [install a modern version of Python](installing_python.qmd) and come back here to continue. 
2. Franklin is built to interact with the **Chrome** browser. So make sure is installed on your computer or download it [here](https://www.google.com/intl/en_uk/chrome/).
3. Franklin uses Docker isolate the setup for each exercise, so you need to install **Docker Desktop** too. Follow the tutorial on [installing Docker](installing_docker.qmd) and come back here to continue.

We use **Pixi** to install Franklin. [Pixi](https://pixi.sh/latest/) is a modern, fast package manager that's fully compatible with conda packages but offers better performance and reliability. On the page about [pixi and conda](pixi_and_conda.qmd), you can see how to install it.

**Install Franklin with Pixi:**

::: {.panel-tabset group="role"}

## Student

```{.bash}
pixi global install franklin --channel conda-forge --channel munch-group
```

Verify installation:

```{.bash}
franklin --version
```


<details>
<summary>(Click if you absolutely must install with Conda - not recommended)</summary>

Activate your conda environment and run:

```{.bash}
conda install -c conda-forge -c munch-group franklin
```

Verify installation:

```{.bash}
franklin --version
```

</details>

## Educator

Educators also include the educator tools in their installation:

```{.bash}
pixi global install franklin-educator --channel conda-forge --channel munch-group
```

Verify installation:

```{.bash}
franklin --version
franklin exercise --help
```

<details>
<summary>(Click if you absolutely must install with Conda - not recommended)</summary>

```{.bash}
pixi global install franklin-educator --channel conda-forge --channel munch-group
```

Verify installation:

```{.bash}
franklin --version
franklin exercise --help
```

</details>

## Administrator

Educators also include the educator tools in their installation:

```{.bash}
pixi global install franklin-admin --channel conda-forge --channel munch-group
```

Verify installation:

```{.bash}
franklin --version
franklin exercise --help
```

<details>
<summary>(Click if you absolutely must install with Conda - not recommended)</summary>

```{.bash}
pixi global install franklin-admin --channel conda-forge --channel munch-group
```

Verify installation:

```{.bash}
franklin --version
franklin finger --help
```

</details>




:::


## Using Franklin

Simple and robust command line interface in Terminal/PowerShell:

::: {.panel-tabset group="role"}

## Student

<i class="bi bi-terminal"></i> **Download an exercise**:

1. Run `franklin download`
2. Select your course
3. Select the exercise notebook to download

<i class="bi bi-terminal"></i> **Start working**: 

1. Run `franklin jupyter`
2. Select your course and exercise to make JupyterLab opens in the Chrome browser.
3. Work on the exercise
4. Save your progress
5. Close browser window to stop Franklin.

See [Franklin core commands](commands_core.qmd) for the full documentation.

## Educator

<i class="bi bi-terminal"></i> **Create a new exercise from an example template**:

1. Run `franklin exercise new`
2. Select your course and name exercise
3. Edit exercise visibility in browser window.
4. Wait a few minutes while the new image builds.

<i class="bi bi-terminal"></i> **Edit exercise notebook**:

1. Run `franklin exercise edit`
2. Select your course and exercise to clone the repository pull image.
3. Edit notebook in JupyterLab opening in Chrome.
4. Save your work.
5. Closing the browser window will add, commit, and push your changes to the GitLab exercise repository and initiate the building of an updated Docker image.

See [Core commands](commands_core.qmd), [Educator commands](commands_edu.qmd), and [Admin commands](commands_admin.qmd) for the full documentation.

## Administrator

<i class="bi bi-terminal"></i> **List users**:

1. 


:::

